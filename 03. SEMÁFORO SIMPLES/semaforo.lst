CCS PCM C Compiler, Version 5.007, 61971               20-mar-24 10:03

               Filename:   C:\Users\Ivina\Desktop\03. SEMÁFORO SIMPLES\semaforo.lst

               ROM used:   137 words (7%)
                           Largest free fragment is 1911
               RAM used:   6 (3%) at main() level
                           7 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   011
0003:  NOP
....................  
.................... #include <16f628a.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
.................... #use delay(clock=400000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   010
000A:  MOVLW  20
000B:  MOVWF  77
000C:  DECFSZ 77,F
000D:  GOTO   00C
000E:  DECFSZ 00,F
000F:  GOTO   00A
0010:  RETURN
.................... #fuses INTRC_IO,NOWDT,PUT,BROWNOUT,NOLVP,NOMCLR,XT 
....................  
.................... void main () { 
0011:  MOVLW  07
0012:  MOVWF  1F
0013:  BCF    03.7
0014:  MOVLW  1F
0015:  ANDWF  03,F
....................  
....................    output_high(pin_b0); //acende o led vermelho 
0016:  BSF    03.5
0017:  BCF    06.0
0018:  BCF    03.5
0019:  BSF    06.0
....................  output_low(pin_b1); //apaga o led amarelo 
001A:  BSF    03.5
001B:  BCF    06.1
001C:  BCF    03.5
001D:  BCF    06.1
....................  output_low(pin_b2); //apaga o led verde 
001E:  BSF    03.5
001F:  BCF    06.2
0020:  BCF    03.5
0021:  BCF    06.2
....................   delay_ms(6000); //espera 6s 
0022:  MOVLW  18
0023:  MOVWF  21
0024:  MOVLW  FA
0025:  MOVWF  22
0026:  CALL   004
0027:  DECFSZ 21,F
0028:  GOTO   024
....................    
....................  output_low(pin_b0); //apaga o led vermelho 
0029:  BSF    03.5
002A:  BCF    06.0
002B:  BCF    03.5
002C:  BCF    06.0
....................  output_high(pin_b2); //acente o led verde 
002D:  BSF    03.5
002E:  BCF    06.2
002F:  BCF    03.5
0030:  BSF    06.2
....................   delay_ms(4000); //espera 4s 
0031:  MOVLW  10
0032:  MOVWF  21
0033:  MOVLW  FA
0034:  MOVWF  22
0035:  CALL   004
0036:  DECFSZ 21,F
0037:  GOTO   033
....................  
....................  output_low(pin_b2); //apaga o led verde 
0038:  BSF    03.5
0039:  BCF    06.2
003A:  BCF    03.5
003B:  BCF    06.2
....................  output_high(pin_b1); //acente o led amarelo 
003C:  BSF    03.5
003D:  BCF    06.1
003E:  BCF    03.5
003F:  BSF    06.1
....................   delay_ms(3000); //espera 3 
0040:  MOVLW  0C
0041:  MOVWF  21
0042:  MOVLW  FA
0043:  MOVWF  22
0044:  CALL   004
0045:  DECFSZ 21,F
0046:  GOTO   042
....................    
....................  output_low(pin_b1); 
0047:  BSF    03.5
0048:  BCF    06.1
0049:  BCF    03.5
004A:  BCF    06.1
....................   output_high(pin_b0); 
004B:  BSF    03.5
004C:  BCF    06.0
004D:  BCF    03.5
004E:  BSF    06.0
....................     
....................   //SEGUNDO SEMAFORO b0 = b3// b1 = b4 //e o b2=b5 
....................   
....................   output_high(pin_b5); //acende o led verde 
004F:  BSF    03.5
0050:  BCF    06.5
0051:  BCF    03.5
0052:  BSF    06.5
....................  output_low(pin_b4); //apaga o led amarelo 
0053:  BSF    03.5
0054:  BCF    06.4
0055:  BCF    03.5
0056:  BCF    06.4
....................  output_low(pin_b3); //apaga o led vermelho 
0057:  BSF    03.5
0058:  BCF    06.3
0059:  BCF    03.5
005A:  BCF    06.3
....................   delay_ms(6000); //espera 6s 
005B:  MOVLW  18
005C:  MOVWF  21
005D:  MOVLW  FA
005E:  MOVWF  22
005F:  CALL   004
0060:  DECFSZ 21,F
0061:  GOTO   05D
....................    
....................  output_low(pin_b5); //apaga o led verde 
0062:  BSF    03.5
0063:  BCF    06.5
0064:  BCF    03.5
0065:  BCF    06.5
....................  output_high(pin_b3); //acente o led vermelho 
0066:  BSF    03.5
0067:  BCF    06.3
0068:  BCF    03.5
0069:  BSF    06.3
....................   delay_ms(4000); //espera 4s 
006A:  MOVLW  10
006B:  MOVWF  21
006C:  MOVLW  FA
006D:  MOVWF  22
006E:  CALL   004
006F:  DECFSZ 21,F
0070:  GOTO   06C
....................  
....................  output_low(pin_b3); //apaga o led vermelho 
0071:  BSF    03.5
0072:  BCF    06.3
0073:  BCF    03.5
0074:  BCF    06.3
....................  output_high(pin_b4); //acente o led amarelo 
0075:  BSF    03.5
0076:  BCF    06.4
0077:  BCF    03.5
0078:  BSF    06.4
....................   delay_ms(3000); //espera 3 
0079:  MOVLW  0C
007A:  MOVWF  21
007B:  MOVLW  FA
007C:  MOVWF  22
007D:  CALL   004
007E:  DECFSZ 21,F
007F:  GOTO   07B
....................    
....................  output_low(pin_b4); 
0080:  BSF    03.5
0081:  BCF    06.4
0082:  BCF    03.5
0083:  BCF    06.4
....................   output_high(pin_b5); 
0084:  BSF    03.5
0085:  BCF    06.5
0086:  BCF    03.5
0087:  BSF    06.5
....................    
.................... } 
....................  
0088:  SLEEP

Configuration Fuses:
   Word  1: 3F41   NOWDT PUT XT NOMCLR BROWNOUT NOLVP NOCPD NOPROTECT
